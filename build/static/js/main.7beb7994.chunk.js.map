{"version":3,"sources":["chart/BarChart.js","components/Controls.js","App.js","serviceWorker.js","index.js"],"names":["BarChart","prevProps","data","this","props","height","initVis","width","updateDimensions","highlight","updateData","select","append","attr","concat","chartClass","html","_this","createTooltip","_this$props","margin","transition","xKey","yAxisText","marginLeft","marginRight","rangeToggle","yAxisDomain","colors","selected","chartHeight","notSelected","top","bottom","chartWidth","svg","node","tooltip","console","log","rects","selectAll","d","state","yAxis","xScale","scaleLinear","range","domain","max","yScale","scaleBand","map","padding","yAxisCall","axisRight","tickSizeInner","tickSizeOuter","duration","long","call","remove","enter","stateID","bandwidth","on","style","text","format","totalInv","homesPowered","invPerHome","short","currentEvent","pageX","pageY","merge","x","y","anchor","_this2","_this$props2","_this$props3","includes","_this3","react_default","a","createElement","ref","Component","defaultProps","Controls","handleDropdownChange","e","_ref","value","Dropdown","placeholder","fluid","multiple","search","selection","onChange","options","stateOptions","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","componentDidMount","window","addEventListener","handleResize","setTimeout","populateStateList","toConsumableArray","Set","sort","b","State","localeCompare","setState","dimensions","container","clientHeight","clientWidth","objectSpread","length","states","undefined","raw","forEach","replace","region","Region","toUpperCase","_this$state","statesArray","textPropsTwo","i","push","key","formatData","className","parent","src_components_Controls","chart_BarChart","numberFormat","List","bulleted","horizontal","link","Item","as","href","target","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7beb7994.chunk.js","sourcesContent":["import React, {Component} from 'react'\nimport './Chart.css'\nimport { select, event as currentEvent, selectAll } from 'd3-selection'\nimport { scaleBand, scaleLinear } from 'd3-scale'\nimport { max } from 'd3-array'\nimport { axisRight } from 'd3-axis'\nimport { format } from 'd3-format'\nimport { transition } from 'd3-transition'\n\n\nclass BarChart extends Component {\n\n  componentDidUpdate(prevProps){\n\n    const {data} = this.props\n\n    if(prevProps.height === 20000){this.initVis(data)}\n    else if (this.props.width !== prevProps.width || this.props.height !== prevProps.height)\n    {this.updateDimensions()}\n\n    if(prevProps.highlight !== this.props.highlight){this.updateData(data)}\n  }\n\n  createTooltip(){\n      select('body').append('div').attr('class', `tooltip${this.props.chartClass} tooltip`).attr('height', 0)\n      select(`.tooltip${this.props.chartClass}`)\n          .html(\n              \"<text>The state of </text><text class='bold state-name'></text><text> has invested </text><text class='bold investment'></text><text> in Wind Energy</text></br>\" +\n              \"<text>With capability of powering </text><text class='bold no-of-homes'></text><text> homes, it translates to </text><text class='bold investment-per-home'></text><text> per home powered</text></br>\"\n          )\n  }\n\n  initVis(data){\n\n    this.createTooltip()\n\n    const { margin, width, height, transition, chartClass, xKey, yAxisText, marginLeft, marginRight, rangeToggle, yAxisDomain, highlight, colors} = this.props,\n          { selected, notSelected} = colors,\n          chartHeight = height - margin.top - margin.bottom,\n          chartWidth = width - marginLeft - marginRight,\n          svg = select(this.node),\n          tooltip = select(`.tooltip${chartClass}`)\n\n    svg.attr('height', height).attr('width', width)\n\n    console.log(highlight)\n\n    svg.append('g')\n        .attr('class', `chart-area${chartClass}`)\n        .attr('transform', `translate(${marginLeft},${margin.top})`)\n    svg.append('g')\n        .attr('class', `y-axis${chartClass} y-axis`)\n        .attr('transform', `translate(${marginLeft},${margin.top})`)\n\n    const rects = select(`.chart-area${chartClass}`).selectAll('rect').data(data, d => d.state)\n\n    this.yAxis = select(`.y-axis${chartClass}`)\n    this.xScale = scaleLinear().range(rangeToggle === 'right' ? [chartWidth, 0] : [0, chartWidth]).domain([0, max(data, d => d[xKey]) ])\n    this.yScale = scaleBand().range([chartHeight, 0]).domain(data.map(d => d.state)).padding(.1)\n    this.yAxisCall = axisRight(this.yScale).tickSizeInner(3).tickSizeOuter(0)\n\n    this.yAxis.transition('y-axis' + chartClass).duration(transition.long).call(this.yAxisCall)\n    this.yAxis.selectAll(yAxisText).remove()\n    this.yAxis.selectAll('.tick line').remove()\n    this.yAxis.selectAll(yAxisDomain).remove()\n\n    rects.enter()\n        .append('rect')\n        .attr('class', d => d.stateID + '-rect')\n        .attr('height', this.yScale.bandwidth())\n        .attr('y', d => this.yScale(d.state))\n        .attr('width', d => rangeToggle === 'right' ? this.xScale(0) + this.xScale(d[xKey]) : this.xScale(0) )\n        .attr('x', d => this.xScale(0))\n        .attr('opacity', .8)\n        .on('mouseover', d => {\n            tooltip.style('opacity', .9).style('height', 'auto')\n              tooltip.select('.state-name').text(d.state)\n              tooltip.select('.investment').text(format('$,d')(d.totalInv) + 'M')\n              tooltip.select('.no-of-homes').text(format(',d')(d.homesPowered))\n              tooltip.select('.investment-per-home').text(format('$,d')(d.invPerHome))\n              selectAll(`.${d.stateID}-rect`).transition('hover-in').duration(transition.short).attr('opacity', 1)\n            })\n        .on('mousemove', d => {\n            tooltip.style(\"left\", (currentEvent.pageX + 10) + \"px\").style(\"top\", (currentEvent.pageY + 10) + \"px\")})\n        .on('mouseout', d => {\n            tooltip.style(\"opacity\", 0).style('height', 0)\n            selectAll(`.${d.stateID}-rect`).transition('hover-out').duration(transition.short).attr('opacity', .8)})\n        .attr('fill', selected)\n            .merge(rects)\n            .transition('rect-init')\n            .duration(transition.long)\n            .attr('width', d => rangeToggle === 'right' ? this.xScale(0) + this.xScale(d[xKey]) : this.xScale(d[xKey]) )\n            .attr('x', d => rangeToggle === 'right' ? this.xScale(d[xKey]) : this.xScale(0))\n\n    select(`.chart-area${chartClass}`).append('text')\n        .attr('class', `axis-label${chartClass}`)\n        .attr('x', this.props.text.x)\n        .attr('y', this.props.text.y)\n        .attr('fill', '#333')\n        .text(this.props.text.text)\n        .attr('text-anchor', this.props.text.anchor)\n  }\n\n  updateDimensions(){\n\n      const { margin, width, height, xKey, chartClass, yAxisText, yAxisDomain, marginLeft, marginRight, rangeToggle} = this.props,\n              chartHeight = height - margin.top - margin.bottom,\n              chartWidth = width - marginLeft - marginRight,\n              svg = select(this.node)\n\n      svg.attr('height', height).attr('width', width)\n\n      this.xScale.range(rangeToggle === 'right' ? [chartWidth, 0] : [0, chartWidth])\n      this.yScale.range([chartHeight, 0])\n\n      this.yAxis.call(this.yAxisCall)\n      this.yAxis.selectAll(yAxisText).remove()\n      this.yAxis.selectAll(yAxisDomain).remove()\n\n      select(`.chart-area${chartClass}`)\n          .selectAll('rect')\n          .attr('height', this.yScale.bandwidth())\n          .attr('y', d => this.yScale(d.state))\n          .attr('width', d => rangeToggle === 'right' ? this.xScale(0) + this.xScale(d[xKey]) : this.xScale(d[xKey]) )\n          .attr('x', d => rangeToggle === 'right' ? this.xScale(d[xKey]) : this.xScale(0))\n\n      select(`.axis-label${chartClass}`)\n          .attr('x', this.props.text.x)\n\n  }\n\n  updateData(){\n    const {chartClass, highlight, colors, transition} = this.props,\n          {selected, notSelected} = colors\n\n    select(`.chart-area${chartClass}`).selectAll('rect')\n          .transition('color-change')\n          .duration(transition.long)\n          .attr('fill', d => highlight.includes(d.state) ? selected : notSelected)\n  }\n\n  render(){\n    return (\n      <svg ref={node => this.node = node}/>\n    )\n  }\n}\n\nBarChart.defaultProps = {\n  margin: {\n    top: 30,\n    bottom: 40,\n  },\n  transition: {\n    short: 300,\n    long: 1000\n  },\n  colors: {\n    selected: '#5BA581',\n    notSelected: '#C1CCC1'\n  }\n\n}\n\nexport default BarChart;\n","import React, {Component} from 'react'\nimport { Dropdown } from 'semantic-ui-react'\nimport './Controls.css'\n\n\nclass Controls extends Component{\n\n  componentDidMount(){\n\n  }\n\n  handleDropdownChange = (e, {value}) => {\n    this.props.handleDropdownChange(value);\n  }\n\n\n  render(){\n      return(\n        <div>\n          <Dropdown\n              placeholder='Highlight a state:'\n              fluid multiple search selection\n              onChange = {this.handleDropdownChange}\n              options={this.props.stateOptions} />\n            <h1>How Many Homes Can Be Powered from Wind Energy and How Much Does It Cost?</h1>\n        </div>\n      )\n  }\n}\n\nexport default Controls\n","import React, { Component } from 'react'\nimport BarChart from './chart/BarChart'\nimport Controls from './components/Controls'\nimport data from './data/data.json'\nimport './App.css'\nimport { List } from 'semantic-ui-react'\n\nclass App extends Component {\n\n  constructor(props){\n    super(props)\n    this.state = {\n      dimensions: {\n          height: 20000,\n          width: undefined\n      },\n      states: this.populateStateList()\n    }\n\n  }\n\n  componentDidMount = () => {\n    window.addEventListener(\"resize\", this.handleResize);\n    setTimeout(() => this.handleResize(), 200);\n  }\n\n  populateStateList = () => [...new Set(data.sort((a,b) =>\n    a.State.localeCompare(b.State) ).map(d => d.State))]\n\n  handleResize = () => {\n    this.setState({\n      dimensions: {\n        height: this.container && this.container.clientHeight,\n        width: this.container && this.container.clientWidth\n      }\n    });\n  }\n\n  handleDropdownChange = (value) => {\n    let highlight = {...this.state}\n    if(value.length === 0){\n      highlight.states = this.populateStateList()\n    } else { highlight.states = value}\n    this.setState( highlight )\n  }\n\n  formatData(raw){\n\n    return raw.forEach( d => {\n      d.state = d.State\n      d.stateID = d.State.replace(' ','')\n      d.region = d.Region.toUpperCase()\n      d.homesPowered = d['Homes Powered']\n      d.invPerHome = d['Investment Per Home']\n      d.totalInv = d['Total Investment']\n\n    })\n\n  }\n\n  render() {\n\n    const { dimensions, states } = this.state,\n          { height, width } = dimensions,\n          statesArray = this.populateStateList(),\n          stateOptions = [],\n          margin = 100,\n          textPropsOne = {x: 0, y: 0, text: 'Power capacity as equivalent of homes powered', anchor: 'start'},\n          textPropsTwo = {x: width * .5 - margin, y: 0, text: 'Investment ($) per homes powered', anchor: 'end'}\n\n    for( let i = 0; i < statesArray.length; i++){\n\n    stateOptions.push({\n                      key: statesArray[i],\n                      value: statesArray[i],\n                      text: statesArray[i]\n                      })\n    }\n    // console.log(states)\n    this.formatData(data)\n\n    data.sort((a,b) => a.homesPowered - b.homesPowered)\n\n    return (\n      <div className=\"visualization\" ref={parent => (this.container = parent)}>\n        <div className=\"text-controls\">\n            <Controls\n              stateOptions = {stateOptions}\n              handleDropdownChange = {this.handleDropdownChange}\n            />\n        </div>\n        <div className=\"chart-one\">\n            <BarChart\n              data = {data}\n              xKey = {'homesPowered'}\n              chartClass = {'-one'}\n              width= {width/2}\n              height= {height}\n              marginLeft = {margin}\n              marginRight = {0}\n              yAxisText = {'text'}\n              yAxisDomain = {'.domain'}\n              rangeToggle = {'right'}\n              highlight = {states}\n              numberFormat = {\"$,.0d\"}\n              text = {textPropsOne}\n\n            />\n        </div>\n        <div className=\"chart-two\">\n            <BarChart\n              data = {data}\n              xKey = {'invPerHome'}\n              chartClass = {'-two'}\n              width= {width/2}\n              height= {height}\n              marginLeft = {0}\n              marginRight = {margin}\n              rangeToggle = {'left'}\n              highlight = {states}\n              numberFormat = {\"$,.0d\"}\n              text = {textPropsTwo}\n            />\n        </div>\n        <div>\n          <List bulleted horizontal link className=\"credit\">\n              <List.Item as='a' href=\"https://twitter.com/AndSzesztai\"  target=\"_blank\">Designed by: Andras Szesztai</List.Item>\n              <List.Item as='a' href=\"https://public.tableau.com/profile/hanna.nykowska#!/vizhome/mm2019w8/Howmanyhomescanbepoweredfromwindenergyandhowmuchisit\"  target=\"_blank\">Inspired by the work of: Hanna Nykowska</List.Item>\n              <List.Item as='a'href=\"https://www.makeovermonday.co.uk/\"  target=\"_blank\">#MakeoverMonday 2019 W8</List.Item>\n              <List.Item as='a' href=\"https://data.world/makeovermonday/2019w8\"  target=\"_blank\">Data: American Wind Energy Association via Choose Energy</List.Item>\n            </List>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}